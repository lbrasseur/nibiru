Pendientes:
- El fragmento de ANTLR probablemente no sea necesario ahora si se va Hibernate
- Por el tema de las configuraciones se van los fragmentos para tal fin‚ a lo mejor quedan los que sean necesarios para ver drivers de base de datos - borrados, el dirver tiene que ser visible desde la WEBAPP!!! (debe susar el context xlassloader)
- Ver el tema de correr Karaf desde eclipse.
- Ver el tema de crear features para que nibiru se instale solo
- El mecanismo de extension points basado en Spring DM tambien se podria sacar y usar solo el generico


--------------------------------

features:install -v webconsole

--------------------------------
Pasos para habilitar los servicios de JPA:

https://github.com/cschneider/Karaf-Tutorial/blob/master/db/examplejpa/ReadMe.txt

features:install -v jndi jpa transaction
install -s mvn:commons-collections/commons-collections/3.2.1
install -s mvn:commons-pool/commons-pool/1.5.4
install -s mvn:commons-dbcp/commons-dbcp/1.4
install -s mvn:commons-lang/commons-lang/2.6
install -s wrap:mvn:net.sourceforge.serp/serp/1.13.1
install -s mvn:org.apache.openjpa/openjpa/2.1.1
install -s mvn:org.apache.aries/org.apache.aries.util/0.4

--------------------------------

Instalar soporte para WAR (revisar si es necesario, porque al final no lo armé como WAR):

features:install -v war

(de la doc de Karaf)

DEPLOYING A WAR TO THE INSTALLED WEB FEATUREThe following steps will describe how to install a simple WAR file (with JSPs or Servlets) to the just installed web feature.1.	To deploy a WAR (JSP or Servlet) to Jetty, update its MANIFEST.MF to include the required OSGi headers as described here - http://team.ops4j.org/wiki/display/ops4j/Pax+Web+Extender+- +War+-+OSGi-fy2.	Copy the updated WAR (archive or extracted files) to the deploy directory.




Tambien fue necesario esto:

install -s mvn:commons-codec/commons-codec/1.7


--------------------------------
Bundles instlados para que funciona BIRT:

org.eclipse.birt.core_4.2.1.v201209121203.jar


